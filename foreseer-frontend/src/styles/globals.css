@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --default-bg-color: #f9fafb; /* Light theme background color */
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
    --default-bg-color: #1a1b20; /* Dark theme background color */
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background-color: var(--default-bg-color);
}

.main-bg {
  background: linear-gradient(180deg, #1a1b20 75%, #e8e9e7 25%);
  /* The gradient goes from white to dark at the 50% mark of the container */
}

::-webkit-scrollbar {
  width: 0.5rem; /* Set the width of the scrollbar */
}

::-webkit-scrollbar-track {
  background: transparent; /* Make the scrollbar track transparent */
}

::-webkit-scrollbar-thumb {
  background: rgba(97, 96, 97, 0.3); /* Set the color of the scrollbar thumb */
  border-radius: 10px; /* Set the border radius to make rounded ends */
}

@keyframes sparkleDiagonal {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 0.5;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.fade-in {
  animation: fadeIn 1s ease-in-out;
}

/* flex wrapper */
.flex-wrapper {
  display: flex;
  align-items: var(--align, stretch); /* Default is stretch */
  justify-content: var(--justify, flex-start); /* Default is flex-start */
  gap: var(--gap, 0); /* Default gap is 0 */
  flex-direction: var(--direction, row); /* Default direction is row */
}

.button {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  align-items: center;
  color: #fff; /* Default text color */
  cursor: pointer;
  min-width: fit-content;
  overflow: hidden;
  position: relative;
  transition: color 0.3s ease-out;
  background-size: 400% 400%;
  border-radius: 1rem; /* Default to normal shape */
  font-size: 1rem; /* Default to medium size */
  padding: 0.5rem 1rem; /* Default to medium size */
  justify-content: center;
}

.button-circle {
  border-radius: 50%;
  padding: 0.2rem 0.2rem;
}

.button-small {
  padding: 0.5rem;
  font-size: 0.8rem;
}

.button-large {
  padding: 1rem 2rem;
  font-size: 1.2rem;
}

.button-transparent {
  background-color: transparent;
}

.button-secondary {
  background-color: #313131;
}

.button-tertiary {
  background-color: #13161f;
}

.button-primary {
  background-color: #ed9213;
  color: #13161f;
}

.button-buy {
  background-color: #2ecc71;
}

.button-selling {
  background-color: #e74c3c;
}

.button-outlined {
  background-color: transparent;
  border: 1px solid #e8e9e7;
  color: #e8e9e7;
  transition: all 0.3s ease-out;
}

.button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom right,
    rgba(255, 255, 255, 0.5) 0%,
    transparent 100%
  );
  background-size: 200% 200%;
  z-index: 1;
  transition: all 0.3s ease-out;
  opacity: 0;
}

.button:hover::before {
  animation: sparkleDiagonal 0.5s ease-in-out forwards;
}

.button:hover:not(.button-loading):not(.button-animation-disabled) {
  color: white;
}

.button-primary:hover .arrow-container.show-arrow {
  opacity: 1;
  transform: translateX(0);
}

.button-primary:hover:not(.button-loading):not(.button-animation-disabled) {
  padding-right: 3rem; /* Add space for the arrow only on hover */
  color: #1a1b20; /* Ensure text color doesn't change on hover */
}

.arrow-container {
  position: absolute;
  right: 10%;
  opacity: 0;
  transform: translateX(-20px);
  transition: all 0.3s ease-out;
  color: #1a1b20; /* Set arrow color */
}

.button-primary:hover:not(.button-loading):not(.button-animation-disabled)
  .arrow-container.show-arrow {
  opacity: 1;
  transform: translateX(0);
  background-color: #e8e9e7;
  color: #1a1b20;
}
.button-content {
  transition: transform 0.3s ease-out;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.button-primary:hover:not(.button-loading):not(.button-animation-disabled)
  .button-content {
  transform: translateX(-1rem);
}

.button-loading {
  cursor: not-allowed;
}

.button-animation-disabled {
  cursor: pointer;
}

.loader {
  position: absolute;
  right: 10%;
  width: 20px;
  height: 20px;
  border: 2px solid #1a1b20;
  border-bottom-color: transparent;
  border-radius: 50%;
  display: inline-block;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
}

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.icon-container {
  display: flex;
  align-items: center; /* Align icon vertically */
  justify-content: center; /* Center content horizontally */
}
/* Tooltip.css */

.tooltip-container {
  position: relative;
  display: inline-block;
}

.tooltip-text {
  visibility: hidden; /* Initial state, overridden when visible */
  width: 120px;
  background-color: #2a2c33;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  position: absolute;
  z-index: 1;
  animation: fadeIn 0.5s ease-out forwards;
}

/* Visibility class */
.tooltip-visible {
  visibility: visible;
}

/* Placement classes */
.tooltip-top {
  top: 0;
  transform: translateX(-50%);
}

.tooltip-bottom {
  bottom: 0;
  transform: translateX(-50%);
}

.tooltip-left {
  left: 0;
  transform: translateY(-50%);
}

.tooltip-right {
  left: 100;
  transform: translateY(-100%) translateX(50%);
}

/* Menu.css */

.menu-container {
  list-style: none;
  margin: 0;
  padding: 0;
  background: transparent;
  width: 100%;
  border-radius: 1rem;
  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); */
}

.submenu-container {
  display: none;
  position: absolute;
  background-color: #1b1c2e;
  width: fit-content;
  border-radius: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  z-index: 10;
  animation: fadeIn 0.5s ease-out forwards;
}

/* Add specific placement and alignment classes for submenu-container based on your needs */

.menu-item,
.submenu-item {
  padding: 12px 20px;
  cursor: pointer;
  position: relative;
  display: block;
  background-color: transparent;
  border-radius: 1rem;
  width: 100%;
}

.menu-item {
  display: flex;
  align-items: center;
  padding: 12px 20px;
  cursor: pointer;
  position: relative;
  background-color: transparent;
  border-radius: 1rem;
  width: 100%;
}

.menu-item-content {
  width: 100%;
  display: flex;
  color: #e8e9e7;
}

.menu-item-with-end {
  justify-content: space-between;
}

.menu-item:hover,
.submenu-item:hover {
  background-color: rgba(97, 96, 97, 0.1);
}

.menu-item:hover .submenu-container {
  display: block; /* or 'flex' */
}

.menu-item.selected {
  background-color: rgba(97, 96, 97, 0.3);
}

.section-header {
  margin: 8px;
  background-color: "transparent";
  font-weight: bold;
  color: grey;
  text-transform: uppercase;
  font-size: 0.8rem;
}

.submenu-right {
  left: 100%;
  top: 0;
  /* Adjust as necessary for alignment */
}

/* Card.css */
.card-container {
  background-color: rgba(97, 96, 97, 0.1);
  border-radius: 12px;
  border: 1px solid rgba(97, 96, 97, 0.3);
  padding: 2rem;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.5), 0px 1px 3px rgba(0, 0, 0, 0.08);
  color: white;
  transition: 0.2s ease-in-out;
  width: 100%;
}

.card-with-backdrop {
  backdrop-filter: blur(16px) saturate(180%);
  -webkit-backdrop-filter: blur(16px) saturate(180%);
}

.card-bullish {
  background-image: linear-gradient(
    to bottom right,
    hsl(89.57, 75%, 8%) 0%,
    transparent 59%
  );
}

.card-bearish {
  background-image: linear-gradient(
    to bottom left,
    hsl(337.61, 93%, 8%) 0%,
    transparent 59%
  );
}

.card-neutral {
  background-image: linear-gradient(
    to bottom left,
    hsl(156.92, 0%, 20%) 0%,
    transparent 59%
  );
}

.card-fun {
  background-image: linear-gradient(
    to bottom left,
    hsl(271.74, 99%, 34%) 0%,
    transparent 59%
  );
}

.card-info {
  background-image: linear-gradient(
    to bottom left,
    hsl(57.53, 95%, 20%) 0%,
    transparent 59%
  );
}

.card-dark {
  background-image: none;
  background-color: #161822;
}

.card-disabled {
  opacity: 0.5;
}

.card-click-animation:hover {
  cursor: pointer;
  transform: translateX(-5px);
}

.card-click-animation::after {
  /* Arrow on the right */
  position: absolute;
  top: 50%;
  right: -10px;
  width: 0;
  height: 0;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 8px solid #ccc;
  transform: translateY(-50%);
  transition: border-color 0.2s ease;
}

.card-click-animation:hover::after {
  border-left-color: #fff;
}

.card-container:hover .card-content {
  transform: translateX(-5px); /* Move the text a little to the left on hover */
}

/* Tag.css */
.tag-container {
  backdrop-filter: blur(16px) saturate(180%);
  -webkit-backdrop-filter: blur(16px) saturate(180%);
  background-color: rgba(97, 96, 97, 0.1);
  border-radius: 12px;
  border: 1px solid rgba(97, 96, 97, 0.3);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: #e8e9e7;
  padding: 4px 8px;
  font-size: 12px;
  width: fit-content;
}

/* Input.css */
.input-container {
  padding: 10px;
  position: relative;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  background-color: transparent;
  border: 1px solid #ccc;
  border-radius: 1rem;
  width: 100%;
  color: #e8e9e7;
}

.input-container:focus-within {
  border-bottom: 1px solid #fff;
  outline: none;
}

.styled-input {
  display: block;
  width: 100%;
  box-sizing: border-box;
  background-color: transparent;
  border: none;
  outline: none;
  border-bottom: none;
  color: #e8e9e7;
}

.styled-input:focus {
  border-color: #fff;
}

/* TextArea.css */
.styled-textarea {
  padding: 10px;
  margin: 5px 0;
  border: none;
  border-radius: 4px;
  display: block;
  width: 100%;
  box-sizing: border-box;
  background-color: transparent;
  border-radius: 1rem;
  max-height: 20rem; /* Set your desired maximum height here */
  overflow-y: auto; /* Show scrollbar when content exceeds max height */
  resize: none; /* Prevent resizing */
}

.endicon-container {
  padding-top: 7.2px;
}

.styled-textarea:focus {
  border-color: #fff;
  outline: none;
}
/* Tabs.css */
.tab-list {
  display: flex;
  gap: 10px;
}

.tab {
  flex-grow: 1;
  padding: 10px;
  border: none;
  background-color: transparent;
  cursor: pointer;
  outline: none;
  position: relative;
  margin-bottom: -1px; /* To overlap the bottom border of TabList */
}

.tab-active::after {
  content: "";
  display: block;
  position: absolute;
  bottom: 100%;
  left: 35%;
  width: 30%;
  border-top: 2px solid #fff; /* Your desired border style */
}

/* You might not need to style TabContent separately if it's just a div with padding */
.tab-content {
  padding: 20px;
}

/* Text.css */
.text {
  color: #e8e9e7;
  font-family: "Inter", sans-serif; /* Adjust as needed based on how you've imported the font */
}

/* Heading.css */
.heading {
  font-family: "Comfortaa", sans-serif; /* Adjust based on your font import */
  font-weight: 700;
  color: #e8e9e7;
}

.heading-1 {
  font-size: 2rem;
}
.heading-2 {
  font-size: 1.8rem;
}
.heading-3 {
  font-size: 1.6rem;
}
.heading-4 {
  font-size: 1.4rem;
}
.heading-5 {
  font-size: 1.2rem;
}
.heading-6 {
  font-size: 1rem;
}

/* Search */

.search-container {
  z-index: 1000; /* Ensure it's above other content; you may need to adjust this value */
  left: 20; /* Aligned to the left */
  right: 20; /* Aligned to the right */
}

.search-container-mobile {
  position: absolute; /* Fixed position regardless of scroll */
  top: 30%; /* At the top of the viewport */
  z-index: 1000; /* Ensure it's above other content; you may need to adjust this value */
}

.fixed-search-container {
  position: fixed; /* Fixed position regardless of scroll */
  top: 2%; /* At the top of the viewport */

  z-index: 1000; /* Ensure it's above other content; you may need to adjust this value */
  background-color: #1a1b20;
  border-radius: 2rem;
}

/* Dropdown.css */

.dropdown {
  position: relative;
  display: inline-block;
  min-width: 160px;
}

.dropdown-toggle {
  padding: 4px;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 160px;
  min-width: fit-content;
  padding: 5px 0;
  margin: 2px 0 0;
  font-size: 14px;
  text-align: left;
  list-style: none;
  background-color: rgb(39, 39, 39);
  background-clip: padding-box;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  color: #fff;
}

.dropdown-menu.show {
  display: block;
}

.dropdown-item {
  padding: 10px 20px;
  clear: both;
  font-weight: 400;
  color: #fff; /* White text for contrast */
  text-align: inherit;
  white-space: nowrap;
  background-color: transparent; /* Reset for specific items, if needed */
  border: 0;
  cursor: pointer;
}

.dropdown-item:hover,
.dropdown-item:focus {
  color: #262626;
  text-decoration: none;
  background-color: #f5f5f5; /* Lighter background on hover */
}

/* Modal.css */

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContainer {
  position: relative;
  z-index: 1001;
  width: 36rem;
}

.modalBackdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
}
.modalWindow {
  background-color: #13161f;
  padding: 20px;
  border-radius: 1rem;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  z-index: 1001;
  width: 100%;
  overflow-y: auto;
  position: fixed;
  top: 100%; /* Start below the view */
}
.smallModalWindow {
  background-color: #33353b;
  padding: 20px;
  border-radius: 1rem;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  z-index: 1000; /* Ensure this is above the backdrop */
  width: 40rem;
  overflow-y: auto;
  position: relative; /* Change to relative as it is already within a fixed container */
}

.modalContent {
  background-color: #33353b;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  width: 100%;
}

@keyframes slideIn {
  from {
    top: 100%;
  }
  to {
    top: 0;
  }
}

@keyframes slideOut {
  from {
    top: 0;
  }
  to {
    top: 100%;
  }
}

.modalWindowEnter {
  animation: slideIn 0.3s ease-out forwards;
}

.modalWindowExit {
  animation: slideOut 0.15s ease-out forwards;
}

.closeButton {
  position: absolute;
  top: 20px;
  left: 20px;
  background: none;
  border: none;
  font-size: 1.8rem;
  background-color: rgb(41, 44, 35);
  border-radius: 50%;
  padding: 0.8rem;
  padding-top: 0rem;
  padding-bottom: 0.2rem;
  cursor: pointer;
  color: grey;
  transition: color 0.3s ease-out;

  &:hover {
    color: white;
  }
}

.smallModalCloseButton {
  position: absolute;
  top: 10px;
  right: 25px;
  background: none;
  border: none;
  font-size: 1.8rem;
  background-color: transparent;
  border-radius: 50%;
  padding: 0rem;
  cursor: pointer;
  color: grey;
  transition: color 0.3s ease-out;

  &:hover {
    color: white;
  }
}

.modalOpen {
  opacity: 1;
  transition: opacity 0.3s ease-out;
}

.modalClosed {
  opacity: 0;
  transition: opacity 0.3s ease-out;
}

/* avatar */

.avatar {
  width: 2.4rem; /* Set the width of the avatar */
  height: 2.4rem; /* Set the height to maintain aspect ratio */
  border-radius: 50%; /* Creates the circular shape */
  overflow: hidden; /* Ensures no overflow of the image outside the circular shape */
  display: inline-block; /* Makes it inline for alignment, adjust as needed */
  border: 1px solid transparent; /* Optional: adds a border */
  transition: border-color 0.3s, transform 0.3s; /* Smooth transition for hover effects */
  cursor: pointer; /* Changes the cursor to a pointer to indicate it's clickable */
}

.avatar-small {
  width: 1.8rem; /* Set the width of the avatar */
  height: 1.8rem; /* Set the height to maintain aspect ratio */
}

.avatar-large {
  width: 3.6rem; /* Set the width of the avatar */
  height: 3.6rem; /* Set the height to maintain aspect ratio */
}

.avatar-xl {
  width: 8.8rem; /* Set the width of the avatar */
  height: 8.8rem; /* Set the height to maintain aspect ratio */
}

.avatar-glassy {
  backdrop-filter: blur(16px) saturate(180%);
  -webkit-backdrop-filter: blur(16px) saturate(180%);
  background-color: rgba(97, 96, 97, 0.3);
  border: 1px solid rgba(97, 96, 97, 0.5);
}

.avatar:hover {
  border-color: #ccc; /* Changes border color on hover */
  transform: scale(1.05); /* Slightly enlarges the avatar on hover */
}

.avatar img {
  width: 100%; /* Makes the image fully cover the avatar area */
  height: 100%; /* Maintains aspect ratio */
  object-fit: cover; /* Ensures the image covers the area without distortion */
}

/* Accordion.css */

.accordion {
  border-radius: 4px;
  overflow: hidden;
  width: 100%;
}

.accordion-item {
  border-top: transparent;
}

.accordion-title {
  padding: 10px 20px;
  cursor: pointer;
  background-color: transparent;
}

.accordion-title.active {
  background-color: transparent;
}

.accordion-content {
  padding: 10px 20px;
  background-color: transparent;
}

/* Popover */
.popover-container {
  position: relative;
  display: inline-block;
}
.trigger {
  cursor: pointer;
}
.content {
  position: absolute;
  background-color: rgb(39, 39, 39);
  color: #e8e9e7;
  border-radius: 8px;
  padding: 8px;
  width: max-content;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
}

/* Add more levels as needed */

/* Checkbox */

.checkboxContainer {
  display: flex;
  align-items: center;
  cursor: pointer;
  user-select: none;
  gap: 10px;
}

.checkbox {
  opacity: 0;
  position: absolute;
  width: 0;
  height: 0;
}

.checkmark {
  width: 20px;
  height: 20px;
  background-color: #ccc;
  border-radius: 4px;
  display: inline-block;
  position: relative;
  transition: background-color 0.2s;
}

.checkbox:checked + .checkmark {
  background-color: #3b3b3b;
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  left: 7px;
  top: 3px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.checkbox:checked + .checkmark:after {
  display: block;
}

.checkboxLabel {
  margin-right: 10px;
}

/* Datepicker */

.datepickerContainer {
  display: flex;
  justify-content: start;
  align-items: center;
  width: 100%;
}

.input {
  padding: 0.5rem 1rem;
  font-size: 1rem;
  border: 1px solid grey;
  border-radius: 1rem;
  background-color: transparent;
  width: 100%;
}

.calendarContainer {
  background-color: rgb(39, 39, 39);
}

.clearButton {
  background-color: transparent;
  border: none;
  cursor: pointer;
}
/* Ensure the overall datepicker has a black background */
/* Ensure the overall datepicker has a black background */
.react-datepicker {
  background-color: rgb(39, 39, 39);
  border: 1px solid #444;
  color: #fff;
}

/* Header customization */
.react-datepicker__header {
  background-color: rgb(39, 39, 39) !important;
  border-bottom: 1px solid #444;
}

/* Navigation buttons customization */
.react-datepicker__navigation {
  background-color: rgb(
    39,
    39,
    39
  ) !important; /* Ensuring the background is black */
  border: none;
}

.react-datepicker__navigation-icon::before {
  border-color: #fff !important; /* Ensuring the arrow color is white */
}

/* Month and year header customization */
.react-datepicker__current-month {
  background-color: rgb(39, 39, 39) !important;
  color: #fff !important;
}

.react-datepicker__day-name {
  background-color: rgb(39, 39, 39) !important;
  color: #fff !important;
}

/* Day customization */
.react-datepicker__day {
  background-color: rgb(39, 39, 39) !important;
  color: #fff !important;
}

.react-datepicker__day:hover {
  background-color: #333 !important;
}

.react-datepicker__day--selected,
.react-datepicker__day--keyboard-selected {
  background-color: #2196f3 !important;
  color: #fff !important;
}

/* Month and year dropdown customization */
.react-datepicker__month-dropdown,
.react-datepicker__year-dropdown {
  background-color: rgb(39, 39, 39) !important;
  color: #fff;
  border: 1px solid #444;
}

/* Month container customization */
.react-datepicker__month-container {
  background-color: rgb(39, 39, 39) !important;
}

/* Month dropdown customization */
.react-datepicker__month-read-view,
.react-datepicker__year-read-view {
  background-color: rgb(39, 39, 39) !important;
  color: #fff;
  border: 1px solid #444;
}

/* Month and year dropdown option customization */
.react-datepicker__month-option,
.react-datepicker__year-option {
  background-color: rgb(39, 39, 39) !important;
  color: #fff;
}

/* Month and year dropdown option hover customization */
.react-datepicker__month-option:hover,
.react-datepicker__year-option:hover {
  background-color: #333 !important;
}

/* Additional container styling */
.react-datepicker__triangle {
  border-bottom-color: rgb(
    39,
    39,
    39
  ) !important; /* Ensuring the triangle is black */
}

.react-datepicker__navigation:hover *::before {
  border-color: #fff !important; /* Ensure the hover state for the navigation arrows is white */
}
